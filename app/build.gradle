apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.doubtnut"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    api "androidx.appcompat:appcompat:$appcompat_version"
    api "androidx.constraintlayout:constraintlayout:$androidx_constraint_layout_version"
    api "androidx.core:core-ktx:$android_core_ktx"
    api "androidx.recyclerview:recyclerview:$androidx_stable_version"
    api "androidx.fragment:fragment:$androidx_stable_version"

    api "androidx.fragment:fragment-ktx:$ktx_fragment_version"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"


    /* retrofit for network calls */
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
    api 'com.squareup.retrofit2:adapter-rxjava2:2.7.1'
    api "com.squareup.okhttp3:okhttp:4.3.1"
    api "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    api "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    api "com.google.android.material:material:$android_material_version"

    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    // architecture components
    implementation "android.arch.lifecycle:runtime:$arch_runtime_version"
    implementation "android.arch.lifecycle:extensions:$arch_version"
    implementation "android.arch.lifecycle:reactivestreams:$arch_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"


    // gson for type converters
    api "com.google.code.gson:gson:$gson_version"

    //shimmer
    api 'com.facebook.shimmer:shimmer:0.1.0@aar'

    // dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //work manager

    implementation "androidx.work:work-runtime:$work"

    //testing
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation "com.jraska.livedata:testing-ktx:$jraska_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.5'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"
    testImplementation "com.google.truth:truth:1.0"
}
